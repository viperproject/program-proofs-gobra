package chapter06

// Exercise 6.0.

/*
 * In Gobra, the symbol ' is not permitted in a name. 
 * We named our function "LenghthPrime" instead.
 */
ghost          
decreases len(xs)
pure func (xs List) LengthPrime() int { 
	/*
	* As a reminder, the ternary operator (cond ? case1 : case2) is not available in Go. Instead,
	* it is a feature introduced by Gobra. 
	*/
	return xs == Nil{} ? 0 : 1 + xs.tail.LengthPrime()
}
 
ghost
ensures xs.Length() == xs.LengthPrime()
decreases len(xs)
pure func (xs List) LengthEqualsLengthPrime() Unit {  
	return match xs {
		case Nil{}:
			Unit{}
		case Cons{_, ?tail}:
			tail.LengthEqualsLengthPrime()
	}
}

// Exercise 6.1.: The implementation of the lemma "LengthSnoc" can be found in examples_6.1.gobra.